{"ast":null,"code":"var _jsxFileName = \"/Users/tejpooni/Full-Stack/client/notes/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// import Dashboard from \"./components/Dashboard\";\nimport { useState } from \"react\";\nimport Axios from \"axios\"; // import LoginForm from \"./components/LoginForm\";\n// import Navbar from \"./comxponents/Navbar\";\n// import Register from \"./components/Register\";\n//inline styling instead of css classes css attributes must be in camelCase \n\n/** JUST FOR FUTURE REFERENCE\n * 4 ways to insert css into js files 1) seperate css file eg) app.css 2) inline styling in js file 3) css modules eg) app.module.css 4) css in js libraries\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst heading = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '60px',\n  fontFamily: 'Courier New'\n};\nconst inputBars = {\n  width: '60%',\n  padding: '12px 15px',\n  margin: '8px 0',\n  boxSizing: 'border-box',\n  float: 'initial',\n  marginTop: '6px'\n};\n\nfunction App() {\n  _s();\n\n  /**\n   * 2 states: Registration and Login\n   * Grab info from whatever we put into inputs and then validate it \n   */\n  const [usernameReg, setUsernameReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const [usernameLogin, setUsernameLogin] = useState('');\n  const [passwordLogin, setPasswordLogin] = useState(''); // const[loginStatus, setLoginStatus ] = useState('') \n  // function when we click on the register button sends all our info to backend so it inserts to our db\n\n  const register = () => {\n    console.log(\"making the call client\");\n    Axios.post(\"http://localhost:3001/register\", {\n      username: usernameReg,\n      password: passwordReg\n    }).then(response => {\n      console.log(response);\n    });\n  }; // function when we click on the login button sends all our info to backend so we can compare if password username combo matches\n\n\n  const login = () => {\n    console.log(\"making the call client\");\n    Axios.post(\"http://localhost:3001/login\", {\n      username: usernameLogin,\n      password: passwordLogin\n    }).then(response => {\n      // if(response.data.errormessage){//if an error exists ie) errmsg is sent then display it on webpage\n      //   setLoginStatus(response.data.message)\n      // }   \n      // else{//if no error r\n      //   setLoginStatus(response.data[0].username)\n      // }\n      console.log(response.data);\n    });\n  }; // const register = () => {\n  //   Axios.get(\"http://localhost:3001/blah\").then((response) => {\n  //     console.log(response);\n  //   });\n  // };\n\n\n  return (\n    /*#__PURE__*/\n    // <LoginForm/>\n    _jsxDEV(\"div\", {\n      className: \"LoginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Registration\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: heading,\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: heading,\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: inputBars,\n          type: \"text\",\n          onChange: e => {\n            setUsernameReg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: heading,\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: inputBars,\n          type: \"password\",\n          onChange: e => {\n            setPasswordReg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: register,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: heading,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: heading,\n          children: \"Username        \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: inputBars,\n          type: \"text\",\n          placeholder: \"Username...\",\n          onChange: e => {\n            setUsernameLogin(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: inputBars,\n          type: \"password\",\n          placeholder: \"Password...\",\n          onChange: e => {\n            setPasswordLogin(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(App, \"M3XvPcleLfCPwG1jUvZSbLT0b/k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tejpooni/Full-Stack/client/notes/src/App.js"],"names":["useState","Axios","heading","color","textAlign","fontSize","fontFamily","inputBars","width","padding","margin","boxSizing","float","marginTop","App","usernameReg","setUsernameReg","passwordReg","setPasswordReg","usernameLogin","setUsernameLogin","passwordLogin","setPasswordLogin","register","console","log","post","username","password","then","response","login","data","e","target","value"],"mappings":"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","sourcesContent":["// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// import Dashboard from \"./components/Dashboard\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n// import LoginForm from \"./components/LoginForm\";\n// import Navbar from \"./comxponents/Navbar\";\n// import Register from \"./components/Register\";\n \n//inline styling instead of css classes css attributes must be in camelCase \n/** JUST FOR FUTURE REFERENCE\n * 4 ways to insert css into js files 1) seperate css file eg) app.css 2) inline styling in js file 3) css modules eg) app.module.css 4) css in js libraries\n */\n const heading = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '60px',\n  fontFamily: 'Courier New'\n}\n\nconst inputBars = {\n  width: '60%',\n  padding: '12px 15px',\n  margin: '8px 0',\n  boxSizing: 'border-box',\n  float: 'initial',\n  marginTop: '6px',\n}\n\nfunction App() {\n    /**\n     * 2 states: Registration and Login\n     * Grab info from whatever we put into inputs and then validate it \n     */\n\n    const [usernameReg, setUsernameReg] = useState('')\n    const [passwordReg, setPasswordReg] = useState('')\n\n    const[ usernameLogin, setUsernameLogin] = useState('')\n    const[ passwordLogin, setPasswordLogin] = useState('')\n\n    // const[loginStatus, setLoginStatus ] = useState('') \n\n\n    // function when we click on the register button sends all our info to backend so it inserts to our db\n    const register = () => {\n      console.log(\"making the call client\");\n      Axios.post(\"http://localhost:3001/register\", {\n        username: usernameReg, \n        password: passwordReg\n      }).then((response) => {\n        console.log(response);\n      });\n    };\n\n       // function when we click on the login button sends all our info to backend so we can compare if password username combo matches\n      const login = () => {\n       console.log(\"making the call client\");\n        Axios.post(\"http://localhost:3001/login\", {\n          username: usernameLogin, \n          password: passwordLogin\n        }).then((response) => {\n          // if(response.data.errormessage){//if an error exists ie) errmsg is sent then display it on webpage\n          //   setLoginStatus(response.data.message)\n          // }   \n          // else{//if no error r\n          //   setLoginStatus(response.data[0].username)\n          // }\n          console.log(response.data);\n        });\n      };\n\n    // const register = () => {\n    //   Axios.get(\"http://localhost:3001/blah\").then((response) => {\n    //     console.log(response);\n    //   });\n    // };\n\n  return (\n   \n        // <LoginForm/>\n        <div className = \"LoginForm\">\n\n          <div className = \"Registration\">\n            <h1 style = {heading}>Registration</h1>\n            <label style = {heading}>Username </label>\n            <input \n                  style = {inputBars} \n                  type = \"text\" \n                  onChange = {(e)=> {setUsernameReg(e.target.value);}}\n            />\n            <br/>\n            <label style = {heading}>Password </label>\n            <input\n                  style = {inputBars} \n                  type = \"password\"\n                  onChange = {(e) => {setPasswordReg(e.target.value);}}\n            />\n            <br/>\n            <button onClick = {register}>Register</button>\n          </div>\n\n          <div className = \"Login\">\n              <h1 style = {heading}>Login</h1>\n              <label style = {heading}>Username        </label>\n              <input \n                    style = {inputBars}\n                    type = \"text\" \n                    placeholder = \"Username...\"\n                    onChange = {(e)=> {setUsernameLogin(e.target.value);}}\n              />\n              <br/>\n              <input \n                    style = {inputBars}\n                    type = \"password\" \n                    placeholder = \"Password...\"\n                    onChange = {(e)=> {setPasswordLogin(e.target.value);}}\n              />\n              <br/>\n              <button onClick = {login}>Login</button>\n          </div>\n          {/* <h1>{loginStatus}</h1> */}\n\n        </div>\n  );\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}