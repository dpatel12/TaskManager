{"ast":null,"code":"var _jsxFileName = \"/Users/tejpooni/NotesApp/client/notes/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IoMdCloseCircle } from 'react-icons/io';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return todos.map((todo, index) =>\n  /*#__PURE__*/\n  // return(\n  _jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(IoMdCloseCircle, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit(todo.id, todo.text),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/tejpooni/NotesApp/client/notes/src/components/Todo.js"],"names":["React","useState","IoMdCloseCircle","TiEdit","TodoForm","TodoList","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,OAA+C;AAAA;;AAAA,MAAjC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,YAAR;AAAqBC,IAAAA;AAArB,GAAiC;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;AAKA,SAAON,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN;AAAA;AACjB;AACI;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAAxD;AAAA,4BAEI;AAAmB,MAAA,OAAO,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACH,EAAN,CAA9C;AAAA,gBAEIG,IAAI,CAACG;AAFT,OAAUH,IAAI,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOG;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA,8BACC,QAAC,eAAD;AACI,QAAA,OAAO,EAAE,MAAIH,UAAU,CAACM,IAAI,CAACH,EAAN,CAD3B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADD,eAKC,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAID,OAAO,CAACI,IAAI,CAACH,EAAN,EAASG,IAAI,CAACG,IAAd,CADxB;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPH;AAAA,KAA2EF,KAA3E;AAAA;AAAA;AAAA;AAAA,UAFG,CAAP;AAqBH;;GA3BQV,I;;KAAAA,I;AA4BT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport {IoMdCloseCircle} from 'react-icons/io';\nimport {TiEdit} from 'react-icons/ti';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\n\nfunction Todo({todos, completeTodo,removeTodo}){\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    })\n\n    return todos.map((todo,index) =>(\n    // return(\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key = {index}>\n        {/* <div> */}\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n            {/* <div> */}\n               {todo.text}\n           </div>\n           \n           <div className = \"icons\">\n            <IoMdCloseCircle\n                onClick={()=>removeTodo(todo.id)}\n                className='delete-icon'\n            />\n            <TiEdit\n                onClick={()=>setEdit(todo.id,todo.text)}\n                className='edit-icon'\n            />\n           </div>\n        </div>\n    ))\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}