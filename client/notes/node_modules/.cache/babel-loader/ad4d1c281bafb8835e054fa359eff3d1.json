{"ast":null,"code":"var _jsxFileName = \"/Users/tejpooni/Full-Stack/client/notes/src/AppRender.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Axios from \"axios\"; //styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst heading = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '40px',\n  fontFamily: 'Courier New '\n};\nconst userPassText = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '18px',\n  fontFamily: 'Courier New',\n  marginLeft: '100px'\n};\nconst inputBarsRegistration = {\n  width: '40%',\n  padding: '12px 15px',\n  margin: '8px 0',\n  boxSizing: 'border-box',\n  float: 'initial',\n  marginTop: '50px',\n  marginLeft: '315px'\n};\nconst inputBarsLogin = {\n  width: '40%',\n  padding: '12px 15px',\n  margin: '8px 0',\n  boxSizing: 'border-box',\n  float: 'initial',\n  marginTop: '50px',\n  marginLeft: '510px'\n};\nconst regLogButton = {\n  transitionDuration: ' 0.4s',\n  transform: 'translateY(4px)',\n  fontFamily: 'Courier New',\n  marginLeft: '795px',\n  width: '10%',\n  padding: '8px 18px',\n  fontSize: '16px'\n}; // function when we click on the register button sends all our info to backend so it inserts to our db\n\nconst register = () => {\n  console.log(\"making the call client\");\n  Axios.post(\"http://localhost:3001/register\", {\n    username: usernameReg,\n    password: passwordReg\n  }).then(response => {\n    if (response.data.message) {\n      console.log(\"username taken\");\n      setRegStatus(response.data.message);\n    } else {\n      console.log(\"succesfully created account\");\n      setRegStatus(\"Account Created\");\n    }\n\n    console.log(response);\n  });\n}; // function when we click on the login button sends all our info to backend so we can compare if password username combo matches\n\n\nconst login = () => {\n  console.log(\"making the call client\");\n  Axios.post(\"http://localhost:3001/login\", {\n    username: usernameLogin,\n    password: passwordLogin\n  }).then(response => {\n    if (response.data.errormessage) {\n      //if an error exists ie) errmsg is sent then display it on webpage\n      console.log('wrong user/pass');\n      setLoginStatus(response.data.errormessage);\n    } else {\n      //if no error\n      // console.log(\"Printing response==> \"+response.data[0].username);\n      console.log('sucessful login');\n      setLoginStatus(response.data[0].username);\n    } // console.log(response.data);\n\n  });\n};\n\nconst loginPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"loginPage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 5\n}, this);\n\nconst registrationPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"registrationPage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 5\n}, this);\n\nfunction AppRender() {\n  _s();\n\n  //hooks\n  const [usernameReg, setUsernameReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const [usernameLogin, setUsernameLogin] = useState('');\n  const [passwordLogin, setPasswordLogin] = useState('');\n  const [loginStatus, setLoginStatus] = useState('');\n  const [regStatus, setRegStatus] = useState('');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/loginPage\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/registrationPage\",\n            children: \"Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/loginPage\",\n        component: loginPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/registrationPage\",\n        component: registrationPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppRender, \"Ky4s9/EX4X3AT+5+E5sSGRD16Gs=\");\n\n_c = AppRender;\n;\nexport default AppRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRender\");","map":{"version":3,"sources":["/Users/tejpooni/Full-Stack/client/notes/src/AppRender.js"],"names":["BrowserRouter","Router","Switch","Route","NavLink","useState","Axios","heading","color","textAlign","fontSize","fontFamily","userPassText","marginLeft","inputBarsRegistration","width","padding","margin","boxSizing","float","marginTop","inputBarsLogin","regLogButton","transitionDuration","transform","register","console","log","post","username","usernameReg","password","passwordReg","then","response","data","message","setRegStatus","login","usernameLogin","passwordLogin","errormessage","setLoginStatus","loginPage","registrationPage","AppRender","setUsernameReg","setPasswordReg","setUsernameLogin","setPasswordLogin","loginStatus","regStatus"],"mappings":"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","sourcesContent":["import {BrowserRouter as Router,Switch,Route,NavLink} from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\n//styles\nconst heading = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '40px',\n  fontFamily: 'Courier New '\n}\n\nconst userPassText = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '18px',\n  fontFamily: 'Courier New',\n  marginLeft: '100px'\n}\n\nconst inputBarsRegistration = {\n  width: '40%',\n  padding: '12px 15px',\n  margin: '8px 0',\n  boxSizing: 'border-box',\n  float: 'initial',\n  marginTop: '50px',\n  marginLeft: '315px'\n}\n\nconst inputBarsLogin = {\n  width: '40%',\n  padding: '12px 15px',\n  margin: '8px 0',\n  boxSizing: 'border-box',\n  float: 'initial',\n  marginTop: '50px',\n  marginLeft: '510px'\n}\n\nconst regLogButton = {\n  transitionDuration:' 0.4s',\n  transform: 'translateY(4px)',\n  fontFamily: 'Courier New',\n  marginLeft: '795px',\n  width: '10%',\n  padding: '8px 18px',\n  fontSize: '16px'\n\n}\n\n\n\n// function when we click on the register button sends all our info to backend so it inserts to our db\nconst register = () => {\n    console.log(\"making the call client\");\n    Axios.post(\"http://localhost:3001/register\", {\n      username: usernameReg, \n      password: passwordReg\n    }).then((response) => {\n    if(response.data.message){\n        console.log(\"username taken\")\n        setRegStatus(response.data.message)\n    }\n    else{\n        console.log(\"succesfully created account\")\n        setRegStatus(\"Account Created\")\n    }\n        console.log(response);\n    });\n};\n\n// function when we click on the login button sends all our info to backend so we can compare if password username combo matches\nconst login = () => {\n    console.log(\"making the call client\");\n     Axios.post(\"http://localhost:3001/login\", {\n       username: usernameLogin, \n       password: passwordLogin\n     }).then((response) => {\n       if(response.data.errormessage){ //if an error exists ie) errmsg is sent then display it on webpage\n         console.log('wrong user/pass')\n         setLoginStatus(response.data.errormessage)\n       }\n       else{//if no error\n         // console.log(\"Printing response==> \"+response.data[0].username);\n         console.log('sucessful login')\n         setLoginStatus(response.data[0].username)\n       }\n       // console.log(response.data);\n     });\n};\n\n\n\nconst loginPage = () => (\n    <div>\n      <h2>loginPage</h2>\n    </div>\n  );\n  \n  const registrationPage = () => (\n    <div>\n      <h2>registrationPage</h2>\n    </div>\n  );\n\nfunction AppRender () {\n    //hooks\n    const [usernameReg, setUsernameReg] = useState('')\n    const [passwordReg, setPasswordReg] = useState('')\n    const[ usernameLogin, setUsernameLogin] = useState('')\n    const[ passwordLogin, setPasswordLogin] = useState('')\n    const[loginStatus, setLoginStatus ] = useState('') \n    const[regStatus, setRegStatus] = useState('')\n    return(\n        <Router>\n        <div>\n            <ul>\n              <li>\n                <Link to=\"/loginPage\">Login</Link>\n              </li>\n              <li>\n                <Link to=\"/registrationPage\">Registration</Link>\n              </li>\n            </ul>\n      \n            <hr />\n      \n            <Route exact path=\"/loginPage\" component={loginPage} />\n            <Route path=\"/registrationPage\" component={registrationPage} />\n        </div>\n        </Router>\n    )\n};\n  export default AppRender;\n  \n\n"]},"metadata":{},"sourceType":"module"}