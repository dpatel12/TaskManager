{"ast":null,"code":"var _jsxFileName = \"/Users/tejpooni/Full-Stack/client/notes/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// import Dashboard from \"./components/Dashboard\";\nimport { useState } from \"react\";\nimport Axios from \"axios\"; // import LoginForm from \"./components/LoginForm\";\n// import Navbar from \"./components/Navbar\";\n// import Register from \"./components/Register\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /**\n   * 2 states: Registration and Login\n   * Grab info from whatever we put into inputs and then validate it \n   */\n  const [usernameReg, setUsernameReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const [usernameLogin, setUsernameLogin] = useState('');\n  const [passwordLogin, setPasswordLogin] = useState('');\n  const [loginStatus, setLoginStatus] = useState(''); // function when we click on the register button sends all our info to backend so it inserts to our db\n\n  const register = () => {\n    console.log(\"making the call client\");\n    Axios.post(\"http://localhost:3001/register\", {\n      username: usernameReg,\n      password: passwordReg\n    }).then(response => {\n      console.log(response);\n    });\n  }; // function when we click on the login button sends all our info to backend so we can compare if password username combo matches\n\n\n  const login = () => {\n    console.log(\"making the call client\");\n    Axios.post(\"http://localhost:3001/login\", {\n      username: usernameLogin,\n      password: passwordLogin\n    }).then(response => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        setLoginStatus(response.data[0].username);\n      }\n\n      console.log(response.data);\n    });\n  }; // const register = () => {\n  //   Axios.get(\"http://localhost:3001/blah\").then((response) => {\n  //     console.log(response);\n  //   });\n  // };\n\n\n  return (\n    /*#__PURE__*/\n    // <LoginForm/>\n    _jsxDEV(\"div\", {\n      className: \"LoginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Registration\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setUsernameReg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => {\n            setPasswordReg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: register,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username...\",\n          onChange: e => {\n            setUsernameLogin(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password...\",\n          onChange: e => {\n            setPasswordLogin(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: loginStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(App, \"hFXLL06oKrw/5Gh6XT7fz2sdY0s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tejpooni/Full-Stack/client/notes/src/App.js"],"names":["useState","Axios","App","usernameReg","setUsernameReg","passwordReg","setPasswordReg","usernameLogin","setUsernameLogin","passwordLogin","setPasswordLogin","loginStatus","setLoginStatus","register","console","log","post","username","password","then","response","login","data","message","e","target","value"],"mappings":"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","sourcesContent":["// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// import Dashboard from \"./components/Dashboard\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n// import LoginForm from \"./components/LoginForm\";\n// import Navbar from \"./components/Navbar\";\n// import Register from \"./components/Register\";\n \nfunction App() {\n    /**\n     * 2 states: Registration and Login\n     * Grab info from whatever we put into inputs and then validate it \n     */\n\n    const [usernameReg, setUsernameReg] = useState('')\n    const [passwordReg, setPasswordReg] = useState('')\n\n    const[ usernameLogin, setUsernameLogin] = useState('')\n    const[ passwordLogin, setPasswordLogin] = useState('')\n\n    const[loginStatus, setLoginStatus ] = useState('') \n\n\n    // function when we click on the register button sends all our info to backend so it inserts to our db\n    const register = () => {\n      console.log(\"making the call client\");\n      Axios.post(\"http://localhost:3001/register\", {\n        username: usernameReg, \n        password: passwordReg\n      }).then((response) => {\n        console.log(response);\n      });\n    };\n\n       // function when we click on the login button sends all our info to backend so we can compare if password username combo matches\n       const login = () => {\n        console.log(\"making the call client\");\n        Axios.post(\"http://localhost:3001/login\", {\n          username: usernameLogin, \n          password: passwordLogin\n        }).then((response) => {\n          if(response.data.message){\n            setLoginStatus(response.data.message)\n          }   \n          else{\n            setLoginStatus(response.data[0].username)\n          }\n          console.log(response.data);\n        });\n      };\n    // const register = () => {\n    //   Axios.get(\"http://localhost:3001/blah\").then((response) => {\n    //     console.log(response);\n    //   });\n    // };\n\n  return (\n   \n        // <LoginForm/>\n        <div className = \"LoginForm\">\n\n          <div className = \"Registration\">\n            <h1>Registration</h1>\n            <label>Username</label>\n            <input type = \"text\" \n                   onChange = {(e)=> {setUsernameReg(e.target.value);}}/>\n            <br/>\n            <label>Password </label>\n            <input type = \"password\"\n                   onChange = {(e) => {setPasswordReg(e.target.value);}}/>\n            <br/>\n            <button onClick = {register}>Register</button>\n          </div>\n\n          <div className = \"Login\">\n              <h1>Login</h1>\n              <input type = \"text\" placeholder = \"Username...\"\n                     onChange = {(e)=> {setUsernameLogin(e.target.value);}}/>\n              <br/>\n              <input type = \"password\" placeholder = \"Password...\"\n                     onChange = {(e)=> {setPasswordLogin(e.target.value);}}/>\n              <br/>\n              <button onClick = {login}>Login</button>\n          </div>\n          <h1>{loginStatus}</h1>\n\n        </div>\n  );\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}