{"ast":null,"code":"var _jsxFileName = \"/Users/tejpooni/NotesApp/client/notes/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst heading = {\n  color: 'navy',\n  textAlign: 'center',\n  fontSize: '40px',\n  fontFamily: 'Courier New '\n};\n\nfunction TodoList(_ref) {\n  _s();\n\n  let {\n    updateTodo\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updatedTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: heading,\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/tejpooni/NotesApp/client/notes/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","heading","color","textAlign","fontSize","fontFamily","TodoList","updateTodo","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","updatedTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE,MADK;AAEZC,EAAAA,SAAS,EAAE,QAFC;AAGZC,EAAAA,QAAQ,EAAE,MAHE;AAIZC,EAAAA,UAAU,EAAE;AAJA,CAAhB;;AAOA,SAASC,QAAT,OAA+B;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMY,OAAO,GAAGC,IAAI,IAAG;AACnB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,GAAGH,KAArB;AACH,GAPD;;AASA,QAAMS,WAAW,GAAG,CAACC,MAAD,EAASC,QAAT,KAAqB;AACrC,QAAG,CAACA,QAAQ,CAACP,IAAV,IAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAArB,EAAiD;AAC7C;AACH;;AACDH,IAAAA,QAAQ,CAACW,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;AACH,GALD;;AAOA,QAAME,UAAU,GAAGD,EAAE,IAAG;AACpB,UAAME,SAAS,GAAG,CAAC,GAAGjB,KAAJ,EAAWkB,MAAX,CAAkBf,IAAI,IAAIA,IAAI,CAACY,EAAL,KAAYA,EAAtC,CAAlB;AAEAd,IAAAA,QAAQ,CAACgB,SAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAG;AACtB,QAAIK,YAAY,GAAGpB,KAAK,CAACa,GAAN,CAAUV,IAAI,IAAG;AAChC,UAAGA,IAAI,CAACY,EAAL,KAAYA,EAAf,EAAkB;AACdZ,QAAAA,IAAI,CAACkB,UAAL,GAAkB,CAAClB,IAAI,CAACkB,UAAxB;AACH;;AACD,aAAOlB,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACH,GARD;;AAYA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAI3B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAES;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAO,MAAA,IAAI,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEmB,YAAlC;AAAgD,MAAA,UAAU,EAAEH,UAA5D;AAAwE,MAAA,UAAU,EAAIjB;AAAtF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA7CQD,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React,{ useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nconst heading = {\n    color: 'navy',\n    textAlign: 'center',\n    fontSize: '40px',\n    fontFamily: 'Courier New '\n  }\n\nfunction TodoList({updateTodo}){\n\n    const [todos, setTodos] = useState([])\n    \n    const addTodo = todo =>{\n        if(!todo.text || /^\\s*$/.test(todo.text)){\n            return;\n        }\n        const newTodos = [todo, ...todos]\n        setTodos(newTodos);\n        console.log(todo, ...todos);\n    };\n\n    const updatedTodo = (todoId, newValue) =>{\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    }\n\n    const removeTodo = id =>{\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n\n        setTodos(removeArr)\n    }\n\n    const completeTodo = id =>{\n        let updatedTodos = todos.map(todo =>{\n            if(todo.id === id){\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        })\n        setTodos(updatedTodos);\n    }\n\n\n\n    return(\n        <div>\n            <h1 style = {heading}>What's the Plan for Today?</h1>\n            <TodoForm onSubmit={addTodo}/>\n            <Todo  todo={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo = {updateTodo}/>\n        </div>\n    )\n}\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}